@using Data.Sql.Models
@model Scrambles.Models.JumperListViewModel

@{
    ViewBag.Title = "Jumper List";
}
<h3>
    <a class="panel-heading label label-primary pull-left" href="@Url.Action("Create")">Add Jumper</a>
    <a class="panel-heading label label-primary pull-right" href="@Url.Action("Randomize")">Randomize</a>
</h3>

<table class="table" id="table1" data-order='[[ 2, "desc" ]]'>
    <thead>
        <tr>
            <th>
                First Name
            </th>
            <th>
                Last Name
            </th>
            <th>
                Number of Jumps
            </th>
            <th>
                Organizer?
            </th>
            <th>
                Paid?
            </th>
            <th>
                Comment
            </th>
            <th>
                Up/Down
            </th>
            <th>
                Jump Group
            </th>
            <th>
                Randomized Letter
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Jumpers)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NumberOfJumps)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Organizer)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Paid)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Comment)
                </td>
                <td>
                    @{
            string displayText = null;
            if (item.RandomizedUpDown != null)
            {
                displayText = item.RandomizedUpDown == UpDownFlag.UpJumper ? "Up" : "Down";
            }
                    }
                    @displayText
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.JumpGroup)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RandomizedLetter)
                </td>
                <td style="white-space: nowrap;">
                    @Html.ActionLink("Edit", "Edit", new { id = item.JumperID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.JumperID })
                </td>
            </tr>
        }
    </tbody>
</table>



@section scripts
{
    <script type="text/javascript">
        $(document).ready(function() {
            $('#table1').DataTable({
                paging: false,
                searching: false,
            });
        });
    </script>
}